<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJ0AAAC3AAAAtwAAALcAAAC3AAAAtwAAALcAAAC3AAAAtwAAALcAAAC3AAAAtwAA
        ALcAAACnAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAI4AAACOAAAAjgAAAI4AAACOAAAAjgAAAI4AAACOAAAAjgAA
        AI4AAACOAAAApQAAAP8AAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        AGoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABYAAAA/wAAACYAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAP8AAAAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJUAAAD/AAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAABQAAAAAAAAALAAA
        AJAAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA0gAAAP4AAACfAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAAFAAA
        ADUAAADyAAAAzQAAAPsAAABiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAAD9AAAAtAAAANwAAAAAAAAAAAAAAAAAAAAAAAAAMgAA
        AP8AAAA2AAAA6AAAAKYAAAABAAAAcwAAAPgAAAA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAPkAAABAAAAA/gAAABkAAAAAAAAAAAAA
        AAAAAAAyAAAA/wAAAOQAAAC/AAAABgAAAAAAAAAAAAAAoAAAAOkAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAAxgAAAAQAAAD0AAAAVgAA
        AAAAAAAAAAAAAAAAADIAAAD/AAAA1AAAABAAAAAAAAAAAAAAAAAAAAAGAAAAwgAAANMAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYAAACJAAAAAAAA
        ALwAAACTAAAAAAAAAAAAAAAAAAAAGAAAALsAAAAeAAAAAAAAAAUAAACKAAAAIgAAAAAAAAAUAAAA3AAA
        ALcAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAA+QAA
        AEwAAAAAAAAAfwAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAP4AAADjAAAAJwAA
        AAAAAAAoAAAA7gAAAJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEAAAAD9AAAAEQAAAAAAAABCAAAA/AAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAD6AAAAZAAA
        ALcAAADoAAAALQAAAAAAAABCAAAA+gAAALQAAABcAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAfQAAANIAAAAAAAAAAAAAAAsAAAD6AAAASgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA1QAA
        AK0AAAAAAAAABgAAALAAAADrAAAAMgAAAAAAAAA7AAAAqQAAAPEAAAD8AAAAvQAAAEoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAC5AAAAlQAAAAAAAAAAAAAAAAAAAMgAAACHAAAAAAAAAAAAAAAAAAAAAAAA
        AIsAAADpAAAAFQAAAAIAAACRAAAApgAAAPsAAADvAAAApQAAAKUAAAClAAAAqwAAAOcAAAD/AAAA/gAA
        AKwAAACiAAAAhwAAAAAAAAAAAAAAAwAAAPIAAABYAAAAAAAAAAAAAAAAAAAAiwAAAMMAAAAAAAAAAAAA
        AAAAAAA7AAAA/AAAAFEAAAAAAAAAAgAAALkAAADxAAAAoQAAAKIAAAClAAAApQAAAKUAAAClAAAApQAA
        AKUAAACkAAAAoQAAAPgAAACoAAAAPAAAAD0AAABPAAAA/gAAABwAAAAAAAAAAAAAAAAAAABPAAAA+AAA
        ACMAAAAyAAAAWgAAAN0AAACjAAAAAAAAAAAAAAAAAAAAXgAAAOsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAA+gAAAEoAAADWAAAA/gAAAP8AAADbAAAAAAAAAAAAAAAAAAAAAAAA
        ABMAAAD7AAAA/wAAAP8AAADyAAAAqwAAABAAAAAAAAAAAAAAAAAAAAAmAAAA/gAAADQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD7AAAAFQAAAAAAAAALAAAAJAAAABgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACEAAAApAAAAFgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAuQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAygAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACUAAABtAAAAgQAAAGMAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACsAAADzAAAAmgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAACwAAAKoAAADsAAAAHgAAAAAAAAAAAAAAAAAA
        AAYAAACZAAAA/QAAAOAAAADFAAAA6gAAAPYAAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAD8AAADrAAAA2wAAAHYAAABFAAAARwAAAHwAAADiAAAA5AAAADMAAAAAAAAAAAAA
        AAAAAAAAAAAApgAAAOkAAABIAAAAAAAAAAAAAAADAAAAZwAAAPgAAABzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAACIAAAA3AAAAP8AAAD9AAAA1gAAAIAAAAAPAAAAAAAA
        AAAAAAAAAAAAAAAAAEEAAAD9AAAANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAAAPYAAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAA/wAAAP0AAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAA6gAA
        AGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAACvAAAAlgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADFAAAAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAOAAAABtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVgAAAPYAAAAeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABIAAAA/QAAACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAyQAA
        AM8AAAAeAAAAAAAAAAAAAAAAAAAANwAAAOkAAACZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAXAAAAyQAAAPYAAACuAAAAkwAAALwAAAD9AAAApgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAVgAAAKAAAAC0AAAAlgAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////wAB//8AAf////H///nx///48f//+PEf//jwD//w8Af/8HBj//Bw
        4f/ycRD/4n8I/+I+BB/mPEIH5zwAAMc4gAAHAc/4DwHH+I+H4/Hwf+HhwD/wA8Yf+AePj/4fn4/+P5/P
        //+fz///j4///4cf///AH///4H////////8=
</value>
  </data>
</root>